{"version":3,"sources":["Circle.js","GameOver.js","assets/sounds/Laugh.mp3","assets/sounds/GAME_OVER.mp3","App.js","index.js"],"names":["Circle","props","className","color","active","onClick","click","style","pointerEvents","disabled","id","closeHandler","window","location","reload","GameOver","score","endMessage","gameStartSound","Audio","startSound","gameEndSound","endSound","getRndInteger","min","max","Math","floor","random","App","state","current","circles","showGameOver","rounds","gameStart","timer","undefined","pace","clickHandler","console","log","setState","endHandler","nextCircle","nextActive","setTimeout","startHandler","play","endScore","pause","clearTimeout","circlesList","this","map","c","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47db267a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Circle.css\";\r\n\r\nconst Circle = (props) => {\r\n    return (\r\n        <div className={`circle ${props.color} ${props.active ? \"active\" : \"\"}`}\r\n            onClick={props.click}\r\n            style={{ pointerEvents: props.disabled ? \"auto\" : \"none\" }}\r\n        >\r\n            <p>{props.id}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\n/* style={{ backgroundColor: props.color }} */\r\n\r\n\r\nexport default Circle;","import React from 'react';\r\nimport \"./GameOver.css\";\r\n\r\nconst closeHandler = () => {\r\n    window.location.reload();\r\n};\r\n\r\nconst GameOver = (props) => {\r\n    return (\r\n        <div className=\"overlay\">\r\n            <div className=\"gameover_box\">\r\n                <h2>Game Over</h2>\r\n                <p>Your Score Was: {props.score}</p>\r\n                <p>{props.endMessage}</p>\r\n                <button onClick={closeHandler}>X</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameOver;","export default __webpack_public_path__ + \"static/media/Laugh.51cb1cf0.mp3\";","export default __webpack_public_path__ + \"static/media/GAME_OVER.7abf7a38.mp3\";","import React, { Component } from \"react\";\n\nimport Circle from \"./Circle\";\nimport GameOver from \"./GameOver\";\n\nimport \"./App.css\";\n\nimport startSound from \"../src/assets/sounds/Laugh.mp3\"\n\nimport endSound from \"../src/assets/sounds/GAME_OVER.mp3\"\n\nlet gameStartSound = new Audio(startSound);\nlet gameEndSound = new Audio(endSound);\n\nconst getRndInteger = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nclass App extends Component {\n  state = {\n    score: 0,\n    current: 0,\n    circles: [\n      { id: 1, color: \"green\" },\n      { id: 2, color: \"violet\" },\n      { id: 3, color: \"red\" },\n      { id: 4, color: \"orange\" },\n      { id: 5, color: \"blue\" },\n      { id: 6, color: \"pink\" },\n    ],\n    showGameOver: false,\n    rounds: 0,\n    gameStart: false,\n  };\n  timer = undefined;\n  pace = 1500;\n\n  clickHandler = (id) => {\n    console.log(\"wow, you clicked a circle\" + id);\n    if (this.state.current !== id) {\n      this.endHandler();\n      return;\n    }\n\n    this.setState({\n      score: this.state.score + 10,\n      rounds: 0,\n    });\n  };\n\n  nextCircle = () => {\n    if (this.state.rounds >= 5) {\n      this.endHandler();\n      return;\n    }\n\n\n\n    let nextActive = undefined;\n\n    do {\n      nextActive = getRndInteger(1, 6);\n    } while (nextActive === this.state.current);\n\n    this.setState({\n      current: nextActive,\n      rounds: this.state.rounds + 1,\n    });\n    console.log(this.state.rounds);\n\n    this.pace *= 0.95;\n    this.timer = setTimeout(this.nextCircle, this.pace);\n    console.log(\"active circle is\", this.state.current);\n  };\n\n  startHandler = () => {\n    this.nextCircle();\n    this.setState({ gameStart: true });\n    gameStartSound.play();\n  };\n\n  endHandler = () => {\n    let endScore = undefined;\n    if (this.state.score <= 5) {\n      endScore = \"Your score is less than 5, you can do better!\";\n    }\n    if (this.state.score <= 30) {\n      endScore = \"Your score is less than 30, you can do better!\"\n    }\n    if (this.state.score <= 100) {\n      endScore = \"Your score is less than 100, you can do better!\"\n    }\n    this.setState({\n      endMessage: endScore,\n    });\n\n    gameStartSound.pause();\n    gameEndSound.play();\n    clearTimeout(this.timer);\n    this.setState({\n      showGameOver: true\n    })\n  };\n\n  render() {\n    const circlesList = this.state.circles.map((c) => {\n      return (\n        <Circle\n          id={c.id}\n          key={c.color}\n          color={c.color}\n          click={() => this.clickHandler(c.id)}\n          active={this.state.current === c.id}\n          disabled={this.state.gameStart}\n        />\n      );\n    });\n    return (\n      <main>\n        <h1>SpeedGame</h1>\n        <p>Your score is: {this.state.score}</p>\n        <div className=\"circles\">{circlesList}</div>\n        <button onClick={this.startHandler} disabled={this.state.gameStart}>Start</button>\n        <button onClick={this.endHandler}>Stop</button>\n        {this.state.showGameOver &&\n          <GameOver\n            score={this.state.score}\n            endMessage={this.state.endMessage}\n          />}\n      </main>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'));\n"],"sourceRoot":""}